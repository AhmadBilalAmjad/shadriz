import { user } from "@/schema/user";
import bcrypt from "bcrypt";
import { betterSqlite, sdb } from "./sdb";
import { role, user_role } from "@/schema/role";
import { eq } from "drizzle-orm";

async function main() {
  const email = process.argv[2];
  const password = process.argv[3];
  const hash = bcrypt.hashSync(password, 10);
  await sdb.insert(user).values({ email: email, password: hash });

  await sdb.insert(role).values({ name: "admin" }).onConflictDoNothing();

  const userRes = await sdb.select().from(user).where(eq(user.email, email));
  const roleRes = await sdb.select().from(role).where(eq(role.name, "admin"));

  await sdb
    .insert(user_role)
    .values({ user_id: userRes[0].id, role_id: roleRes[0].id });

  await betterSqlite.close();
}

main();
